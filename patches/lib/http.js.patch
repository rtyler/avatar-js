--- ../node/lib/http.js	2014-10-03 17:59:42.251608888 -0700
+++ src/main/js/lib/http.js	2014-10-06 10:50:53.171771946 -0700
@@ -1010,12 +1010,12 @@
 OutgoingMessage.prototype._finish = function() {
   assert(this.connection);
   if (this instanceof ServerResponse) {
-    DTRACE_HTTP_SERVER_RESPONSE(this.connection);
-    COUNTER_HTTP_SERVER_RESPONSE();
+   // DTRACE_HTTP_SERVER_RESPONSE(this.connection);
+   // COUNTER_HTTP_SERVER_RESPONSE();
   } else {
     assert(this instanceof ClientRequest);
-    DTRACE_HTTP_CLIENT_REQUEST(this, this.connection);
-    COUNTER_HTTP_CLIENT_REQUEST();
+   // DTRACE_HTTP_CLIENT_REQUEST(this, this.connection);
+   // COUNTER_HTTP_CLIENT_REQUEST();
   }
   this.emit('finish');
 };
@@ -1682,8 +1682,8 @@
   }
 
 
-  DTRACE_HTTP_CLIENT_RESPONSE(socket, req);
-  COUNTER_HTTP_CLIENT_RESPONSE();
+  //DTRACE_HTTP_CLIENT_RESPONSE(socket, req);
+  //COUNTER_HTTP_CLIENT_RESPONSE();
   req.res = res;
   res.req = req;
 
@@ -2059,8 +2059,8 @@
     var res = new ServerResponse(req);
 
     res.shouldKeepAlive = shouldKeepAlive;
-    DTRACE_HTTP_SERVER_REQUEST(req, socket);
-    COUNTER_HTTP_SERVER_REQUEST();
+    //DTRACE_HTTP_SERVER_REQUEST(req, socket);
+    //COUNTER_HTTP_SERVER_REQUEST();
 
     if (socket._httpMessage) {
       // There are already pending outgoing res, append.
