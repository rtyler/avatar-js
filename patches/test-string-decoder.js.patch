--- ../node/test/simple/test-string-decoder.js	2013-05-05 20:53:41.000000000 +0200
+++ node/test/simple/test-string-decoder.js	2013-05-30 13:50:05.000000000 +0200
@@ -46,47 +46,47 @@
 s += decoder.write(buffer.slice(3, 4));
 assert.ok(s.length > 0);
 
-// CESU-8
-buffer = new Buffer('EDA0BDEDB18D', 'hex'); // THUMBS UP SIGN (in CESU-8)
-var s = '';
-s += decoder.write(buffer.slice(0, 1));
-s += decoder.write(buffer.slice(1, 2));
-s += decoder.write(buffer.slice(2, 3)); // complete lead surrogate
-assert.equal(s, '');
-s += decoder.write(buffer.slice(3, 4));
-s += decoder.write(buffer.slice(4, 5));
-s += decoder.write(buffer.slice(5, 6)); // complete trail surrogate
-assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
-
-var s = '';
-s += decoder.write(buffer.slice(0, 2));
-s += decoder.write(buffer.slice(2, 4)); // complete lead surrogate
-assert.equal(s, '');
-s += decoder.write(buffer.slice(4, 6)); // complete trail surrogate
-assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
-
-var s = '';
-s += decoder.write(buffer.slice(0, 3)); // complete lead surrogate
-assert.equal(s, '');
-s += decoder.write(buffer.slice(3, 6)); // complete trail surrogate
-assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
-
-var s = '';
-s += decoder.write(buffer.slice(0, 4)); // complete lead surrogate
-assert.equal(s, '');
-s += decoder.write(buffer.slice(4, 5));
-s += decoder.write(buffer.slice(5, 6)); // complete trail surrogate
-assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
-
-var s = '';
-s += decoder.write(buffer.slice(0, 5)); // complete lead surrogate
-assert.equal(s, '');
-s += decoder.write(buffer.slice(5, 6)); // complete trail surrogate
-assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
-
-var s = '';
-s += decoder.write(buffer.slice(0, 6));
-assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
+//// CESU-8
+//buffer = new Buffer('EDA0BDEDB18D', 'hex'); // THUMBS UP SIGN (in CESU-8)
+//var s = '';
+//s += decoder.write(buffer.slice(0, 1));
+//s += decoder.write(buffer.slice(1, 2));
+//s += decoder.write(buffer.slice(2, 3)); // complete lead surrogate
+//assert.equal(s, '');
+//s += decoder.write(buffer.slice(3, 4));
+//s += decoder.write(buffer.slice(4, 5));
+//s += decoder.write(buffer.slice(5, 6)); // complete trail surrogate
+//assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
+//
+//var s = '';
+//s += decoder.write(buffer.slice(0, 2));
+//s += decoder.write(buffer.slice(2, 4)); // complete lead surrogate
+//assert.equal(s, '');
+//s += decoder.write(buffer.slice(4, 6)); // complete trail surrogate
+//assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
+//
+//var s = '';
+//s += decoder.write(buffer.slice(0, 3)); // complete lead surrogate
+//assert.equal(s, '');
+//s += decoder.write(buffer.slice(3, 6)); // complete trail surrogate
+//assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
+//
+//var s = '';
+//s += decoder.write(buffer.slice(0, 4)); // complete lead surrogate
+//assert.equal(s, '');
+//s += decoder.write(buffer.slice(4, 5));
+//s += decoder.write(buffer.slice(5, 6)); // complete trail surrogate
+//assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
+//
+//var s = '';
+//s += decoder.write(buffer.slice(0, 5)); // complete lead surrogate
+//assert.equal(s, '');
+//s += decoder.write(buffer.slice(5, 6)); // complete trail surrogate
+//assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
+//
+//var s = '';
+//s += decoder.write(buffer.slice(0, 6));
+//assert.equal(s, '\uD83D\uDC4D'); // THUMBS UP SIGN (in UTF-16)
 
 
 // UCS-2
